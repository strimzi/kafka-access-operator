# Makefile.docker contains the shared tasks for building, tagging and pushing Docker images.
# This file is included into the Makefile files which contain the Dockerfile files.
#
# The DOCKER_ORG (default is name of the current user) and DOCKER_TAG (based on Git Tag,
# default latest) variables are used to name the Docker image. DOCKER_REGISTRY identifies
# the registry where the image will be pushed (default is Docker Hub).
TOPDIR=$(dir $(lastword $(MAKEFILE_LIST)))

DOCKERFILE_DIR     ?= ./
DOCKER_CMD         ?= docker
DOCKER_REGISTRY    ?= quay.io
DOCKER_ORG         ?= $(USER)
DOCKER_TAG         ?= latest
BUILD_TAG          ?= latest
RELEASE_VERSION    ?= $(shell cat $(TOPDIR)/release.version)

ifdef DOCKER_ARCHITECTURE
  DOCKER_PLATFORM = --platform linux/$(DOCKER_ARCHITECTURE)
  DOCKER_PLATFORM_TAG_SUFFIX = -$(DOCKER_ARCHITECTURE)
endif

docker_build_default:
	# Build Docker image ...
	$(DOCKER_CMD) $(DOCKER_BUILDX) build $(DOCKER_PLATFORM) $(DOCKER_BUILD_ARGS) --build-arg access_operator_version=$(RELEASE_VERSION) -t strimzi/$(PROJECT_NAME):latest $(DOCKERFILE_DIR)
	# Also tag with BUILD_TAG ($(BUILD_TAG)) and DOCKER_PLATFORM_TAG_SUFFIX ($(DOCKER_PLATFORM_TAG_SUFFIX))
	$(DOCKER_CMD) tag strimzi/$(PROJECT_NAME):latest strimzi/$(PROJECT_NAME):$(BUILD_TAG)$(DOCKER_PLATFORM_TAG_SUFFIX)

docker_tag_default:
	# Tag the $(BUILD_TAG) image we built with the given $(DOCKER_TAG) tag
	$(DOCKER_CMD) tag strimzi/$(PROJECT_NAME):$(BUILD_TAG)$(DOCKER_PLATFORM_TAG_SUFFIX) $(DOCKER_REGISTRY)/$(DOCKER_ORG)/$(PROJECT_NAME):$(DOCKER_TAG)$(DOCKER_PLATFORM_TAG_SUFFIX)

docker_push_default: docker_tag
	# Push the $(DOCKER_TAG)-tagged image to the registry
	$(DOCKER_CMD) push $(DOCKER_REGISTRY)/$(DOCKER_ORG)/$(PROJECT_NAME):$(DOCKER_TAG)$(DOCKER_PLATFORM_TAG_SUFFIX)

.PHONY: docker_save_default
docker_save_default:
	# Saves the container as TGZ file
	docker save strimzi/$(PROJECT_NAME):$(BUILD_TAG)$(DOCKER_PLATFORM_TAG_SUFFIX) | gzip > $(PROJECT_NAME)-$(BUILD_TAG)$(DOCKER_PLATFORM_TAG_SUFFIX).tar.gz

.PHONY: docker_load_default
docker_load_default:
	# Loads the container as TGZ file
	docker load < $(PROJECT_NAME)-$(BUILD_TAG)$(DOCKER_PLATFORM_TAG_SUFFIX).tar.gz

.PHONY: docker_amend_manifest_default
docker_amend_manifest_default:
	# Create / Amend the manifest
	docker manifest create $(DOCKER_REGISTRY)/$(DOCKER_ORG)/$(PROJECT_NAME):$(DOCKER_TAG) --amend $(DOCKER_REGISTRY)/$(DOCKER_ORG)/$(PROJECT_NAME):$(DOCKER_TAG)$(DOCKER_PLATFORM_TAG_SUFFIX)

.PHONY: docker_push_manifest_default
docker_push_manifest_default:
	# Push the manifest to the registry
	docker manifest push $(DOCKER_REGISTRY)/$(DOCKER_ORG)/$(PROJECT_NAME):$(DOCKER_TAG)

.PHONY: docker_delete_manifest_default
docker_delete_manifest_default:
	# Delete the manifest to the registry, ignore the error if manifest doesn't exist
	docker manifest rm $(DOCKER_REGISTRY)/$(DOCKER_ORG)/$(PROJECT_NAME):$(DOCKER_TAG) || true

docker_%: docker_%_default
	@  true
